<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>
	<modules>
		<module>eureka</module>
		<module>system</module>
		<module>server</module>
		<module>gateway</module>
        <module>business</module>
		<module>builder</module>
	</modules>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>cn.coderap</groupId>
	<artifactId>course</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!--
			Maven父子模块增加jar包依赖分为两步：
			1、在父pom.xml中增加jar包依赖（有版本号）
			2、在子pom.xml中增加同样的jar包依赖（不带版本号）
			-->
			<!--集成mybatis-->
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>1.3.2</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.37</version>
			</dependency>
			<dependency>
				<groupId>cn.coderap</groupId>
				<artifactId>server</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			<!--mybatis分页插件pagehelper-->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>1.2.10</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.2.60</version>
			</dependency>
			<!--代码生成器：引入freemarker-->
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>2.3.29</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!--mybatis generator自动生成引入步骤：
			 1、添加如下插件，此外还依赖mybatis-spring-boot-starter和mysql-connector-java
			 2、添加并修改src/main/resources/generator/generatorConfig.xml文件
			 3、添加Maven命令：点击Edit Configurations，然后点击加号，选择maven，在Working direction中添加generatorConfig.xml所在的模块的路径，
			 比如这里的F:/IdeaProjects/course/server，Command line添加mybatis-generator:generate -e，其中将Name改为mybatis-generator
			 4、点击mybatis-generator执行Maven命令即可
			 -->

			<!-- mybatis generator 自动生成代码插件 -->
			<!--
            1、这里之所以使用1.3.7，是为了解决mapper.xml重复生成代码的问题，因为generatorConfig.xml中使用的
            org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin是从1.3.7才开始有的。
            2、1.3.7以前的版本的解决方案是通过在Java类里删除原先的xml文件，再执行生成代码
            -->
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.7</version>
				<configuration>
					<configurationFile>src/main/resources/generator/generatorConfig.xml</configurationFile>
					<overwrite>true</overwrite>
					<verbose>true</verbose>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.37</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

</project>
