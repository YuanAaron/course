spring.application.name=gateway
server.port=9000
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# 路由转发
# 目的：对外将9001地址隐藏，暴露9000地址，比如访问的时localhost:9000/system/**,实际处理请求的时localhost:9001/system/**
# 这样，外部对系统的感知就只有9000，而不知道9001。注：虽然现在的9001是可以直接访问，生产环境需要对9001进行一些拦截，让外网不能访问，
# 外网能访问的只有9000，这样就起到了路由的作用。关于权限拦截、限流后面再介绍

# 0表示一个路由，如果有两个路由，可以将下面的四行复制一次，然后将0改为1
# system表示请求转发到system模块
spring.cloud.gateway.routes[0].id=system
# system模块的地址
spring.cloud.gateway.routes[0].uri=http://127.0.0.1:9001
# 下面两个共同表示什么路径的请求会被转发
spring.cloud.gateway.routes[0].predicates[0].name=Path
# 如果请求被转发的路径设置为/system/**，有三种方案：
# 1、在所有方法的路径上加/system，比如/system/test
# 2、在所有controller上加@RequestMapping("/system")
# 3、（推荐）在system模块的配置文件添加server.servlet.context-path=/system
spring.cloud.gateway.routes[0].predicates[0].args[0]=/system/**

spring.cloud.gateway.routes[1].id=business
#spring.cloud.gateway.routes[1].uri=http://127.0.0.1:9002
#如果配置的是IP端口，发布到生产环境时可能会访问不到，即使配置了maven多环境，也需要提前知道上线后的IP和端口，提前配好
spring.cloud.gateway.routes[1].uri=lb://business
spring.cloud.gateway.routes[1].predicates[0].name=Path
spring.cloud.gateway.routes[1].predicates[0].args[0]=/business/**